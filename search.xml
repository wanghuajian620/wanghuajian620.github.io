<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>无状态组件和有状态组件</title>
      <link href="/2018/03/22/component/"/>
      <content type="html"><![CDATA[<h3 id="无状态组件"><a href="#无状态组件" class="headerlink" title="无状态组件"></a>无状态组件</h3><ul><li><p>它只负责根据传入的props来展示，不涉及state状态的操作</p></li><li><p>它通过函数式或者ES6的箭头函数的形式创建，并且该组件是无state状态的。无状态函数式组件形式上 表现为只带有一个render方法的组件类。例如：</p></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> A(props) &#123;</span><br><span class="line">  <span class="built_in">return</span> &lt;div&gt;Hello &#123;props.name&#125;&lt;/div&gt;</span><br><span class="line">&#125;</span><br><span class="line">ReactDom.render(&lt;A name=<span class="string">"sara"</span> /&gt;, mountNode)</span><br></pre></td></tr></table></figure><h3 id="无状态组件特点"><a href="#无状态组件特点" class="headerlink" title="无状态组件特点"></a>无状态组件特点</h3><ul><li><p>组件不会被实例化，整体渲染性能得到提升。（不需分配多余内存）</p></li><li><p>组件不访问this对象。 this.ref、this.state均不能访问。</p></li><li><p>组件无法访问生命周期的方法。（无状态组件是不需要组件生命周期管理和状态管理的，所以它也不参与组件的各个生命周期管理）</p></li><li><p>无状态组件只能访问输入的props，同样的props会得到同样的渲染结果，不会有副作用。</p></li></ul><h3 id="有状态组件"><a href="#有状态组件" class="headerlink" title="有状态组件"></a>有状态组件</h3><ul><li><p>React.createClass 和  React.Component 都是创建有状态组件的。前者会被后者所取代。</p></li><li><p>首先前者自绑定函数方法this，导致不必要的性能开销。 后者是以ES6的形式创建组件，不会自动绑定this</p></li></ul><h5 id="React-Component有三种手动绑定this的方法"><a href="#React-Component有三种手动绑定this的方法" class="headerlink" title="React.Component有三种手动绑定this的方法"></a>React.Component有三种手动绑定this的方法</h5><ul><li>在构造函数中绑定</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">constructor(props) &#123;</span><br><span class="line">  super(props);</span><br><span class="line">  this.handleClick=this.handleClick.bind(this);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>在调用时使用method.bind(this)来完成</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div onClick=&#123;this.handleClick.bind(this)&#125;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><ul><li>使用箭头函数绑定</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div onClick=&#123;() =&gt; this.handleClick()&#125;&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      <categories>
          
          <category> react </category>
          
      </categories>
      
      
        <tags>
            
            <tag> react </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>JavaScript中的==和===的比较</title>
      <link href="/2018/03/17/compare/"/>
      <content type="html"><![CDATA[<h3 id="误解"><a href="#误解" class="headerlink" title="误解"></a>误解</h3><h4 id="检查等价性"><a href="#检查等价性" class="headerlink" title="==检查等价性"></a>==检查等价性</h4><h4 id="检查值和类型两者的等价性"><a href="#检查值和类型两者的等价性" class="headerlink" title="===检查值和类型两者的等价性"></a>===检查值和类型两者的等价性</h4><h3 id="正解"><a href="#正解" class="headerlink" title="正解"></a>正解</h3><h4 id="在允许强制转换的条件下检查值的等价性"><a href="#在允许强制转换的条件下检查值的等价性" class="headerlink" title="==在允许强制转换的条件下检查值的等价性"></a>==在允许强制转换的条件下检查值的等价性</h4><h4 id="是在不允许强制转换的条件下检查值的等价性"><a href="#是在不允许强制转换的条件下检查值的等价性" class="headerlink" title="===是在不允许强制转换的条件下检查值的等价性"></a>===是在不允许强制转换的条件下检查值的等价性</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var a = <span class="string">"42"</span>;</span><br><span class="line">var b = 42;</span><br><span class="line">a == b; // <span class="literal">true</span></span><br><span class="line">a === b; // <span class="literal">false</span></span><br></pre></td></tr></table></figure><h3 id="强制转换"><a href="#强制转换" class="headerlink" title="强制转换"></a>强制转换</h3><h4 id="强制转换有两种形式：明确的和隐含的"><a href="#强制转换有两种形式：明确的和隐含的" class="headerlink" title="强制转换有两种形式：明确的和隐含的"></a>强制转换有两种形式：明确的和隐含的</h4><h5 id="明确的强制转换：是可以在代码中明显地看到一个类型转换到另一个类型"><a href="#明确的强制转换：是可以在代码中明显地看到一个类型转换到另一个类型" class="headerlink" title="明确的强制转换：是可以在代码中明显地看到一个类型转换到另一个类型"></a>明确的强制转换：是可以在代码中明显地看到一个类型转换到另一个类型</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var a = <span class="string">"42"</span></span><br><span class="line">var b = Number(a);</span><br><span class="line">a; // <span class="string">"42"</span>是字符串</span><br><span class="line">b; // 42 是数字</span><br></pre></td></tr></table></figure><h5 id="隐含的强制转换：-更像是一些操作不明显的副作用引发类型转换"><a href="#隐含的强制转换：-更像是一些操作不明显的副作用引发类型转换" class="headerlink" title="隐含的强制转换： 更像是一些操作不明显的副作用引发类型转换"></a>隐含的强制转换： 更像是一些操作不明显的副作用引发类型转换</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">var a = <span class="string">"42"</span></span><br><span class="line">var b = a * 1 // 这里<span class="string">"42"</span>被隐含的强制转换为42</span><br><span class="line">a; // <span class="string">"42"</span>是字符串</span><br><span class="line">b; // 42是数字</span><br></pre></td></tr></table></figure><h4 id="希望这篇博文帮助你更好的了解了JS误区。"><a href="#希望这篇博文帮助你更好的了解了JS误区。" class="headerlink" title="希望这篇博文帮助你更好的了解了JS误区。"></a>希望这篇博文帮助你更好的了解了JS误区。</h4>]]></content>
      
      <categories>
          
          <category> javascript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> javascript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/03/16/hello-world/"/>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
